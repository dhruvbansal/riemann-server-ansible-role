; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "{{ riemann_log_dir }}/riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "{{ riemann_bind_address }}"]
  (tcp-server {:host host :port {{ riemann_tcp_port }}})
  (udp-server {:host host :port {{ riemann_udp_port }}})
  (ws-server  {:host host :port {{ riemann_ws_port }}}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))))))

(include "{{ riemann_conf_dir }}/conf.d")
