; -*- mode: clojure; -*-
; vim: filetype=clojure
; {{ ansible_managed }}

(logging/init {:file "{{ riemann_log_dir }}/riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "{{ riemann_bind_address }}"]
  {% if riemann_use_tcp %}(tcp-server {:host host :port {%if riemann_use_tls%}{{ riemann_tls_port }} :tls? true
                                       :key     "{{ riemann_tls_key }}"
                                       :cert    "{{ riemann_tls_cert }}"
                                       :ca-cert "{{ riemann_tls_ca_cert }}"{% else %}{{ riemann_tcp_port }}}{% endif %}){% endif %}
  {% if riemann_use_udp %}(udp-server {:host host :port {{ riemann_tcp_port }}}){% endif %}
  {% if riemann_use_ws %}(ws-server  {:host host :port {{ riemann_ws_port }}}){% endif %})

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))))))

(include "{{ riemann_conf_dir }}/conf.d")
